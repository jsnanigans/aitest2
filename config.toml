# Weight Stream Processor Configuration - IMPROVED VERSION

[data]
# Input/output settings
csv_file = "./data/2025-09-05_nocon.csv" # no connective health data
output_dir = "output"
max_users = 1
user_offset = 0
min_readings = 20
test_users_file = "single_user_test.txt"
min_date = "2015-01-01"
max_date = "2026-01-01"
export_database = true

[processing]
extreme_threshold = 0.15   # Maximum deviation from Kalman prediction (15%)

[kalman]
# Base Kalman filter parameters (for stable state)
initial_variance = 0.361
transition_covariance_weight = 0.016
transition_covariance_trend = 0.0001
observation_covariance = 3.4

# ============================================================================
# RESET SYSTEM CONFIGURATION
# ============================================================================
# Three types of resets with different adaptation strategies:
# 1. INITIAL - First measurement ever (most aggressive)
# 2. HARD - After long gaps (30+ days)
# 3. SOFT - Manual data entry with significant change

[kalman.reset.initial]
# INITIAL RESET - For the very first measurement(s) of a user
# This needs to be VERY adaptive since we have no prior knowledge
enabled = true

# Adaptation parameters
initial_variance_multiplier = 10     # Multiply base variance by this (high uncertainty)
weight_noise_multiplier = 50         # Process noise multiplier for weight (allows big changes)
trend_noise_multiplier = 500         # Process noise multiplier for trend (allows any trend)
observation_noise_multiplier = 20   # Measurement noise multiplier (trust measurements more)

# Adaptation duration
adaptation_measurements = 30          # Stay adaptive for first 20 measurements
adaptation_days = 90                  # Stay adaptive for first 3 weeks
adaptation_decay_rate = 3           # How fast to transition to normal (lower = faster)

# Quality scoring during adaptation
quality_acceptance_threshold = 0  # Very lenient (25% vs normal 60%)
quality_safety_weight = 0         # Keep safety checks high
quality_plausibility_weight = 0
quality_consistency_weight = 0
quality_reliability_weight = 0    # Trust the source

[kalman.reset.hard]
# HARD RESET - After gaps of 30+ days
# Aggressive but not as much as initial
enabled = true
gap_threshold_days = 30

# Adaptation parameters
initial_variance_multiplier = 5      # Some uncertainty after long gap
weight_noise_multiplier = 20         # Allow moderate changes
trend_noise_multiplier = 200         # Allow trend changes
observation_noise_multiplier = 0.5   # Trust measurements somewhat

# Adaptation duration
adaptation_measurements = 10          # Shorter adaptation period
adaptation_days = 7                   # One week
adaptation_decay_rate = 2.5           # Moderate transition speed

# Quality scoring during adaptation
quality_acceptance_threshold = 0.35  # Moderately lenient
quality_safety_weight = 0.45
quality_plausibility_weight = 0.10
quality_consistency_weight = 0.10
quality_reliability_weight = 0.35

[kalman.reset.soft]
# SOFT RESET - Manual data entry with significant change
# Gentle adaptation for user-reported weights
enabled = true
min_weight_change_kg = 5             # Minimum change to trigger
cooldown_days = 3                     # Wait between soft resets
trigger_sources = ["questionnaire", "patient-upload", "care-team-upload"]

# Adaptation parameters
initial_variance_multiplier = 2      # Small uncertainty boost
weight_noise_multiplier = 5          # Allow small changes
trend_noise_multiplier = 20          # Allow minor trend adjustment
observation_noise_multiplier = 0.7   # Slightly more trust

# Adaptation duration
adaptation_measurements = 15          # Gradual adaptation
adaptation_days = 10
adaptation_decay_rate = 4             # Slow transition

# Quality scoring during adaptation
quality_acceptance_threshold = 0.45  # Slightly lenient
quality_safety_weight = 0.40
quality_plausibility_weight = 0.15
quality_consistency_weight = 0.15
quality_reliability_weight = 0.30

# ============================================================================
# VISUALIZATION
# ============================================================================

[visualization]
enabled = true
use_enhanced = true
verbosity = "normal"

[visualization.markers]
show_source_icons = true
show_source_legend = true
show_reset_markers = true
reset_marker_color = "#FF6600"
reset_marker_opacity = 0.2
reset_marker_width = 1
reset_marker_style = "dot"

[visualization.rejection]
show_severity_colors = true
group_by_severity = true

[visualization.reset]
show_reset_lines = true
show_gap_regions = true
show_gap_labels = true
reset_line_color = "#FF6600"
reset_line_style = "dash"
reset_line_width = 2
gap_region_color = "#F0F0F0"
gap_region_opacity = 0.5
gap_region_pattern = "diagonal"
show_transition_markers = true
transition_marker_size = 10

# ============================================================================
# ADAPTIVE NOISE
# ============================================================================

[adaptive_noise]
enabled = true
default_multiplier = 1.5

# ============================================================================
# RETROSPECTIVE DATA QUALITY PROCESSING
# ============================================================================

[retrospective]
enabled = true
buffer_hours = 72
trigger_mode = "time_based"  # "time_based" or "measurement_count"
max_buffer_measurements = 100
state_history_limit = 100

[retrospective.outlier_detection]
iqr_multiplier = 1.5
z_score_threshold = 3.0
temporal_max_change_percent = 0.50
min_measurements_for_analysis = 5

[retrospective.safety]
max_processing_time_seconds = 60
require_rollback_confirmation = false
preserve_immediate_results = true

# ============================================================================
# LOGGING
# ============================================================================

[logging]
progress_interval = 10000
timestamp_format = "test_no_date"

# ============================================================================
# QUALITY SCORING
# ============================================================================

[quality_scoring]
enabled = true
threshold = 0.6  # Normal acceptance threshold (60%)
use_harmonic_mean = true

[quality_scoring.component_weights]
# Normal weights (must sum to 1.0)
safety = 0.35
plausibility = 0.25
consistency = 0.25
reliability = 0.15
